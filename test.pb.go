// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

/*
Package ngomc is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	Test
	Test2
*/
package ngomc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Test struct {
	A  int64   `protobuf:"varint,1,opt,name=A" json:"A,omitempty"`
	B  string  `protobuf:"bytes,2,opt,name=B" json:"B,omitempty"`
	C  int64   `protobuf:"varint,3,opt,name=C" json:"C,omitempty"`
	D  string  `protobuf:"bytes,4,opt,name=D" json:"D,omitempty"`
	E  int64   `protobuf:"varint,5,opt,name=E" json:"E,omitempty"`
	F  int64   `protobuf:"varint,6,opt,name=F" json:"F,omitempty"`
	G  string  `protobuf:"bytes,7,opt,name=G" json:"G,omitempty"`
	H  string  `protobuf:"bytes,8,opt,name=H" json:"H,omitempty"`
	I  string  `protobuf:"bytes,9,opt,name=I" json:"I,omitempty"`
	J  int64   `protobuf:"varint,10,opt,name=J" json:"J,omitempty"`
	K  string  `protobuf:"bytes,11,opt,name=K" json:"K,omitempty"`
	L  string  `protobuf:"bytes,12,opt,name=L" json:"L,omitempty"`
	M  string  `protobuf:"bytes,13,opt,name=M" json:"M,omitempty"`
	N  int64   `protobuf:"varint,14,opt,name=N" json:"N,omitempty"`
	O  int64   `protobuf:"varint,15,opt,name=O" json:"O,omitempty"`
	P  string  `protobuf:"bytes,16,opt,name=P" json:"P,omitempty"`
	Q  string  `protobuf:"bytes,17,opt,name=Q" json:"Q,omitempty"`
	R  int64   `protobuf:"varint,18,opt,name=R" json:"R,omitempty"`
	S  int64   `protobuf:"varint,19,opt,name=S" json:"S,omitempty"`
	T  string  `protobuf:"bytes,20,opt,name=T" json:"T,omitempty"`
	U  string  `protobuf:"bytes,21,opt,name=U" json:"U,omitempty"`
	V  int64   `protobuf:"varint,22,opt,name=V" json:"V,omitempty"`
	W  string  `protobuf:"bytes,23,opt,name=W" json:"W,omitempty"`
	X  int64   `protobuf:"varint,24,opt,name=X" json:"X,omitempty"`
	Y  int64   `protobuf:"varint,25,opt,name=Y" json:"Y,omitempty"`
	Z  int64   `protobuf:"varint,26,opt,name=Z" json:"Z,omitempty"`
	A1 int64   `protobuf:"varint,27,opt,name=A1" json:"A1,omitempty"`
	B1 int64   `protobuf:"varint,28,opt,name=B1" json:"B1,omitempty"`
	C1 int64   `protobuf:"varint,29,opt,name=C1" json:"C1,omitempty"`
	D1 float32 `protobuf:"fixed32,30,opt,name=D1" json:"D1,omitempty"`
	E1 float32 `protobuf:"fixed32,31,opt,name=E1" json:"E1,omitempty"`
	F1 float32 `protobuf:"fixed32,32,opt,name=F1" json:"F1,omitempty"`
	G1 int64   `protobuf:"varint,33,opt,name=G1" json:"G1,omitempty"`
	H1 int64   `protobuf:"varint,34,opt,name=H1" json:"H1,omitempty"`
	I1 float32 `protobuf:"fixed32,35,opt,name=I1" json:"I1,omitempty"`
	J1 float32 `protobuf:"fixed32,36,opt,name=J1" json:"J1,omitempty"`
	K1 float32 `protobuf:"fixed32,37,opt,name=K1" json:"K1,omitempty"`
	L1 int64   `protobuf:"varint,38,opt,name=L1" json:"L1,omitempty"`
	M1 int64   `protobuf:"varint,39,opt,name=M1" json:"M1,omitempty"`
	N1 int64   `protobuf:"varint,40,opt,name=N1" json:"N1,omitempty"`
	O1 string  `protobuf:"bytes,41,opt,name=O1" json:"O1,omitempty"`
	P1 int64   `protobuf:"varint,42,opt,name=P1" json:"P1,omitempty"`
	Q1 string  `protobuf:"bytes,43,opt,name=Q1" json:"Q1,omitempty"`
	R1 string  `protobuf:"bytes,44,opt,name=R1" json:"R1,omitempty"`
	S1 string  `protobuf:"bytes,45,opt,name=S1" json:"S1,omitempty"`
	T1 string  `protobuf:"bytes,46,opt,name=T1" json:"T1,omitempty"`
	U1 string  `protobuf:"bytes,47,opt,name=U1" json:"U1,omitempty"`
	V1 string  `protobuf:"bytes,48,opt,name=V1" json:"V1,omitempty"`
	W1 float32 `protobuf:"fixed32,49,opt,name=W1" json:"W1,omitempty"`
	X1 float32 `protobuf:"fixed32,50,opt,name=X1" json:"X1,omitempty"`
	Y1 float32 `protobuf:"fixed32,51,opt,name=Y1" json:"Y1,omitempty"`
	Z1 float32 `protobuf:"fixed32,52,opt,name=Z1" json:"Z1,omitempty"`
	A2 float32 `protobuf:"fixed32,53,opt,name=A2" json:"A2,omitempty"`
	B2 string  `protobuf:"bytes,54,opt,name=B2" json:"B2,omitempty"`
	C2 string  `protobuf:"bytes,55,opt,name=C2" json:"C2,omitempty"`
	D2 string  `protobuf:"bytes,56,opt,name=D2" json:"D2,omitempty"`
	E2 string  `protobuf:"bytes,57,opt,name=E2" json:"E2,omitempty"`
	F2 int64   `protobuf:"varint,58,opt,name=F2" json:"F2,omitempty"`
	G2 string  `protobuf:"bytes,59,opt,name=G2" json:"G2,omitempty"`
	H2 int64   `protobuf:"varint,60,opt,name=H2" json:"H2,omitempty"`
	I2 string  `protobuf:"bytes,61,opt,name=I2" json:"I2,omitempty"`
	J2 int64   `protobuf:"varint,62,opt,name=J2" json:"J2,omitempty"`
	K2 string  `protobuf:"bytes,63,opt,name=K2" json:"K2,omitempty"`
	L2 string  `protobuf:"bytes,64,opt,name=L2" json:"L2,omitempty"`
	M2 string  `protobuf:"bytes,65,opt,name=M2" json:"M2,omitempty"`
	N2 string  `protobuf:"bytes,66,opt,name=N2" json:"N2,omitempty"`
	O2 int64   `protobuf:"varint,67,opt,name=O2" json:"O2,omitempty"`
	P2 string  `protobuf:"bytes,68,opt,name=P2" json:"P2,omitempty"`
	Q2 int64   `protobuf:"varint,69,opt,name=Q2" json:"Q2,omitempty"`
	R2 int64   `protobuf:"varint,70,opt,name=R2" json:"R2,omitempty"`
	S2 int64   `protobuf:"varint,71,opt,name=S2" json:"S2,omitempty"`
	T2 string  `protobuf:"bytes,72,opt,name=T2" json:"T2,omitempty"`
	U2 int64   `protobuf:"varint,73,opt,name=U2" json:"U2,omitempty"`
	V2 int64   `protobuf:"varint,74,opt,name=V2" json:"V2,omitempty"`
	W2 string  `protobuf:"bytes,75,opt,name=W2" json:"W2,omitempty"`
	X2 int64   `protobuf:"varint,76,opt,name=X2" json:"X2,omitempty"`
	Y2 string  `protobuf:"bytes,77,opt,name=Y2" json:"Y2,omitempty"`
	Z2 string  `protobuf:"bytes,78,opt,name=Z2" json:"Z2,omitempty"`
	A3 string  `protobuf:"bytes,79,opt,name=A3" json:"A3,omitempty"`
}

func (m *Test) Reset()                    { *m = Test{} }
func (m *Test) String() string            { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()               {}
func (*Test) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Test) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Test) GetB() string {
	if m != nil {
		return m.B
	}
	return ""
}

func (m *Test) GetC() int64 {
	if m != nil {
		return m.C
	}
	return 0
}

func (m *Test) GetD() string {
	if m != nil {
		return m.D
	}
	return ""
}

func (m *Test) GetE() int64 {
	if m != nil {
		return m.E
	}
	return 0
}

func (m *Test) GetF() int64 {
	if m != nil {
		return m.F
	}
	return 0
}

func (m *Test) GetG() string {
	if m != nil {
		return m.G
	}
	return ""
}

func (m *Test) GetH() string {
	if m != nil {
		return m.H
	}
	return ""
}

func (m *Test) GetI() string {
	if m != nil {
		return m.I
	}
	return ""
}

func (m *Test) GetJ() int64 {
	if m != nil {
		return m.J
	}
	return 0
}

func (m *Test) GetK() string {
	if m != nil {
		return m.K
	}
	return ""
}

func (m *Test) GetL() string {
	if m != nil {
		return m.L
	}
	return ""
}

func (m *Test) GetM() string {
	if m != nil {
		return m.M
	}
	return ""
}

func (m *Test) GetN() int64 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *Test) GetO() int64 {
	if m != nil {
		return m.O
	}
	return 0
}

func (m *Test) GetP() string {
	if m != nil {
		return m.P
	}
	return ""
}

func (m *Test) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *Test) GetR() int64 {
	if m != nil {
		return m.R
	}
	return 0
}

func (m *Test) GetS() int64 {
	if m != nil {
		return m.S
	}
	return 0
}

func (m *Test) GetT() string {
	if m != nil {
		return m.T
	}
	return ""
}

func (m *Test) GetU() string {
	if m != nil {
		return m.U
	}
	return ""
}

func (m *Test) GetV() int64 {
	if m != nil {
		return m.V
	}
	return 0
}

func (m *Test) GetW() string {
	if m != nil {
		return m.W
	}
	return ""
}

func (m *Test) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Test) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Test) GetZ() int64 {
	if m != nil {
		return m.Z
	}
	return 0
}

func (m *Test) GetA1() int64 {
	if m != nil {
		return m.A1
	}
	return 0
}

func (m *Test) GetB1() int64 {
	if m != nil {
		return m.B1
	}
	return 0
}

func (m *Test) GetC1() int64 {
	if m != nil {
		return m.C1
	}
	return 0
}

func (m *Test) GetD1() float32 {
	if m != nil {
		return m.D1
	}
	return 0
}

func (m *Test) GetE1() float32 {
	if m != nil {
		return m.E1
	}
	return 0
}

func (m *Test) GetF1() float32 {
	if m != nil {
		return m.F1
	}
	return 0
}

func (m *Test) GetG1() int64 {
	if m != nil {
		return m.G1
	}
	return 0
}

func (m *Test) GetH1() int64 {
	if m != nil {
		return m.H1
	}
	return 0
}

func (m *Test) GetI1() float32 {
	if m != nil {
		return m.I1
	}
	return 0
}

func (m *Test) GetJ1() float32 {
	if m != nil {
		return m.J1
	}
	return 0
}

func (m *Test) GetK1() float32 {
	if m != nil {
		return m.K1
	}
	return 0
}

func (m *Test) GetL1() int64 {
	if m != nil {
		return m.L1
	}
	return 0
}

func (m *Test) GetM1() int64 {
	if m != nil {
		return m.M1
	}
	return 0
}

func (m *Test) GetN1() int64 {
	if m != nil {
		return m.N1
	}
	return 0
}

func (m *Test) GetO1() string {
	if m != nil {
		return m.O1
	}
	return ""
}

func (m *Test) GetP1() int64 {
	if m != nil {
		return m.P1
	}
	return 0
}

func (m *Test) GetQ1() string {
	if m != nil {
		return m.Q1
	}
	return ""
}

func (m *Test) GetR1() string {
	if m != nil {
		return m.R1
	}
	return ""
}

func (m *Test) GetS1() string {
	if m != nil {
		return m.S1
	}
	return ""
}

func (m *Test) GetT1() string {
	if m != nil {
		return m.T1
	}
	return ""
}

func (m *Test) GetU1() string {
	if m != nil {
		return m.U1
	}
	return ""
}

func (m *Test) GetV1() string {
	if m != nil {
		return m.V1
	}
	return ""
}

func (m *Test) GetW1() float32 {
	if m != nil {
		return m.W1
	}
	return 0
}

func (m *Test) GetX1() float32 {
	if m != nil {
		return m.X1
	}
	return 0
}

func (m *Test) GetY1() float32 {
	if m != nil {
		return m.Y1
	}
	return 0
}

func (m *Test) GetZ1() float32 {
	if m != nil {
		return m.Z1
	}
	return 0
}

func (m *Test) GetA2() float32 {
	if m != nil {
		return m.A2
	}
	return 0
}

func (m *Test) GetB2() string {
	if m != nil {
		return m.B2
	}
	return ""
}

func (m *Test) GetC2() string {
	if m != nil {
		return m.C2
	}
	return ""
}

func (m *Test) GetD2() string {
	if m != nil {
		return m.D2
	}
	return ""
}

func (m *Test) GetE2() string {
	if m != nil {
		return m.E2
	}
	return ""
}

func (m *Test) GetF2() int64 {
	if m != nil {
		return m.F2
	}
	return 0
}

func (m *Test) GetG2() string {
	if m != nil {
		return m.G2
	}
	return ""
}

func (m *Test) GetH2() int64 {
	if m != nil {
		return m.H2
	}
	return 0
}

func (m *Test) GetI2() string {
	if m != nil {
		return m.I2
	}
	return ""
}

func (m *Test) GetJ2() int64 {
	if m != nil {
		return m.J2
	}
	return 0
}

func (m *Test) GetK2() string {
	if m != nil {
		return m.K2
	}
	return ""
}

func (m *Test) GetL2() string {
	if m != nil {
		return m.L2
	}
	return ""
}

func (m *Test) GetM2() string {
	if m != nil {
		return m.M2
	}
	return ""
}

func (m *Test) GetN2() string {
	if m != nil {
		return m.N2
	}
	return ""
}

func (m *Test) GetO2() int64 {
	if m != nil {
		return m.O2
	}
	return 0
}

func (m *Test) GetP2() string {
	if m != nil {
		return m.P2
	}
	return ""
}

func (m *Test) GetQ2() int64 {
	if m != nil {
		return m.Q2
	}
	return 0
}

func (m *Test) GetR2() int64 {
	if m != nil {
		return m.R2
	}
	return 0
}

func (m *Test) GetS2() int64 {
	if m != nil {
		return m.S2
	}
	return 0
}

func (m *Test) GetT2() string {
	if m != nil {
		return m.T2
	}
	return ""
}

func (m *Test) GetU2() int64 {
	if m != nil {
		return m.U2
	}
	return 0
}

func (m *Test) GetV2() int64 {
	if m != nil {
		return m.V2
	}
	return 0
}

func (m *Test) GetW2() string {
	if m != nil {
		return m.W2
	}
	return ""
}

func (m *Test) GetX2() int64 {
	if m != nil {
		return m.X2
	}
	return 0
}

func (m *Test) GetY2() string {
	if m != nil {
		return m.Y2
	}
	return ""
}

func (m *Test) GetZ2() string {
	if m != nil {
		return m.Z2
	}
	return ""
}

func (m *Test) GetA3() string {
	if m != nil {
		return m.A3
	}
	return ""
}

type Test2 struct {
	A  int64   `protobuf:"varint,1,opt,name=A" json:"A,omitempty"`
	B  int64   `protobuf:"varint,2,opt,name=B" json:"B,omitempty"`
	C  int64   `protobuf:"varint,3,opt,name=C" json:"C,omitempty"`
	D  int64   `protobuf:"varint,4,opt,name=D" json:"D,omitempty"`
	E  int64   `protobuf:"varint,5,opt,name=E" json:"E,omitempty"`
	F  int64   `protobuf:"varint,6,opt,name=F" json:"F,omitempty"`
	G  int64   `protobuf:"varint,7,opt,name=G" json:"G,omitempty"`
	H  int64   `protobuf:"varint,8,opt,name=H" json:"H,omitempty"`
	I  int64   `protobuf:"varint,9,opt,name=I" json:"I,omitempty"`
	J  int64   `protobuf:"varint,10,opt,name=J" json:"J,omitempty"`
	K  int64   `protobuf:"varint,11,opt,name=K" json:"K,omitempty"`
	L  int64   `protobuf:"varint,12,opt,name=L" json:"L,omitempty"`
	M  int64   `protobuf:"varint,13,opt,name=M" json:"M,omitempty"`
	N  int64   `protobuf:"varint,14,opt,name=N" json:"N,omitempty"`
	O  int64   `protobuf:"varint,15,opt,name=O" json:"O,omitempty"`
	P  int64   `protobuf:"varint,16,opt,name=P" json:"P,omitempty"`
	Q  int64   `protobuf:"varint,17,opt,name=Q" json:"Q,omitempty"`
	R  int64   `protobuf:"varint,18,opt,name=R" json:"R,omitempty"`
	S  int64   `protobuf:"varint,19,opt,name=S" json:"S,omitempty"`
	T  int64   `protobuf:"varint,20,opt,name=T" json:"T,omitempty"`
	U  int64   `protobuf:"varint,21,opt,name=U" json:"U,omitempty"`
	V  int64   `protobuf:"varint,22,opt,name=V" json:"V,omitempty"`
	W  int64   `protobuf:"varint,23,opt,name=W" json:"W,omitempty"`
	X  int64   `protobuf:"varint,24,opt,name=X" json:"X,omitempty"`
	Y  int64   `protobuf:"varint,25,opt,name=Y" json:"Y,omitempty"`
	Z  int64   `protobuf:"varint,26,opt,name=Z" json:"Z,omitempty"`
	A1 float32 `protobuf:"fixed32,27,opt,name=A1" json:"A1,omitempty"`
	B1 float32 `protobuf:"fixed32,28,opt,name=B1" json:"B1,omitempty"`
	C1 float32 `protobuf:"fixed32,29,opt,name=C1" json:"C1,omitempty"`
	D1 float32 `protobuf:"fixed32,30,opt,name=D1" json:"D1,omitempty"`
	E1 float32 `protobuf:"fixed32,31,opt,name=E1" json:"E1,omitempty"`
	F1 float32 `protobuf:"fixed32,32,opt,name=F1" json:"F1,omitempty"`
	G1 float32 `protobuf:"fixed32,33,opt,name=G1" json:"G1,omitempty"`
	H1 float32 `protobuf:"fixed32,34,opt,name=H1" json:"H1,omitempty"`
	I1 float32 `protobuf:"fixed32,35,opt,name=I1" json:"I1,omitempty"`
	J1 float32 `protobuf:"fixed32,36,opt,name=J1" json:"J1,omitempty"`
	K1 float32 `protobuf:"fixed32,37,opt,name=K1" json:"K1,omitempty"`
	L1 float32 `protobuf:"fixed32,38,opt,name=L1" json:"L1,omitempty"`
	M1 float32 `protobuf:"fixed32,39,opt,name=M1" json:"M1,omitempty"`
	N1 float32 `protobuf:"fixed32,40,opt,name=N1" json:"N1,omitempty"`
	O1 float32 `protobuf:"fixed32,41,opt,name=O1" json:"O1,omitempty"`
	P1 float32 `protobuf:"fixed32,42,opt,name=P1" json:"P1,omitempty"`
	Q1 float32 `protobuf:"fixed32,43,opt,name=Q1" json:"Q1,omitempty"`
	R1 float32 `protobuf:"fixed32,44,opt,name=R1" json:"R1,omitempty"`
	S1 float32 `protobuf:"fixed32,45,opt,name=S1" json:"S1,omitempty"`
	T1 float32 `protobuf:"fixed32,46,opt,name=T1" json:"T1,omitempty"`
	U1 float32 `protobuf:"fixed32,47,opt,name=U1" json:"U1,omitempty"`
	V1 float32 `protobuf:"fixed32,48,opt,name=V1" json:"V1,omitempty"`
	W1 float32 `protobuf:"fixed32,49,opt,name=W1" json:"W1,omitempty"`
	X1 float32 `protobuf:"fixed32,50,opt,name=X1" json:"X1,omitempty"`
	Y1 float32 `protobuf:"fixed32,51,opt,name=Y1" json:"Y1,omitempty"`
	Z1 float32 `protobuf:"fixed32,52,opt,name=Z1" json:"Z1,omitempty"`
	A2 int32   `protobuf:"varint,53,opt,name=A2" json:"A2,omitempty"`
	B2 int32   `protobuf:"varint,54,opt,name=B2" json:"B2,omitempty"`
	C2 int32   `protobuf:"varint,55,opt,name=C2" json:"C2,omitempty"`
	D2 int32   `protobuf:"varint,56,opt,name=D2" json:"D2,omitempty"`
	E2 int32   `protobuf:"varint,57,opt,name=E2" json:"E2,omitempty"`
	F2 int32   `protobuf:"varint,58,opt,name=F2" json:"F2,omitempty"`
	G2 int32   `protobuf:"varint,59,opt,name=G2" json:"G2,omitempty"`
	H2 int32   `protobuf:"varint,60,opt,name=H2" json:"H2,omitempty"`
	I2 int32   `protobuf:"varint,61,opt,name=I2" json:"I2,omitempty"`
	J2 int32   `protobuf:"varint,62,opt,name=J2" json:"J2,omitempty"`
	K2 int32   `protobuf:"varint,63,opt,name=K2" json:"K2,omitempty"`
	L2 int32   `protobuf:"varint,64,opt,name=L2" json:"L2,omitempty"`
	M2 int32   `protobuf:"varint,65,opt,name=M2" json:"M2,omitempty"`
	N2 int32   `protobuf:"varint,66,opt,name=N2" json:"N2,omitempty"`
	O2 int32   `protobuf:"varint,67,opt,name=O2" json:"O2,omitempty"`
	P2 int32   `protobuf:"varint,68,opt,name=P2" json:"P2,omitempty"`
	Q2 int32   `protobuf:"varint,69,opt,name=Q2" json:"Q2,omitempty"`
	R2 int32   `protobuf:"varint,70,opt,name=R2" json:"R2,omitempty"`
	S2 int32   `protobuf:"varint,71,opt,name=S2" json:"S2,omitempty"`
	T2 int32   `protobuf:"varint,72,opt,name=T2" json:"T2,omitempty"`
	U2 int32   `protobuf:"varint,73,opt,name=U2" json:"U2,omitempty"`
	V2 int32   `protobuf:"varint,74,opt,name=V2" json:"V2,omitempty"`
	W2 int32   `protobuf:"varint,75,opt,name=W2" json:"W2,omitempty"`
	X2 int32   `protobuf:"varint,76,opt,name=X2" json:"X2,omitempty"`
	Y2 int32   `protobuf:"varint,77,opt,name=Y2" json:"Y2,omitempty"`
	Z2 int32   `protobuf:"varint,78,opt,name=Z2" json:"Z2,omitempty"`
	A3 int32   `protobuf:"varint,79,opt,name=A3" json:"A3,omitempty"`
}

func (m *Test2) Reset()                    { *m = Test2{} }
func (m *Test2) String() string            { return proto.CompactTextString(m) }
func (*Test2) ProtoMessage()               {}
func (*Test2) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Test2) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Test2) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

func (m *Test2) GetC() int64 {
	if m != nil {
		return m.C
	}
	return 0
}

func (m *Test2) GetD() int64 {
	if m != nil {
		return m.D
	}
	return 0
}

func (m *Test2) GetE() int64 {
	if m != nil {
		return m.E
	}
	return 0
}

func (m *Test2) GetF() int64 {
	if m != nil {
		return m.F
	}
	return 0
}

func (m *Test2) GetG() int64 {
	if m != nil {
		return m.G
	}
	return 0
}

func (m *Test2) GetH() int64 {
	if m != nil {
		return m.H
	}
	return 0
}

func (m *Test2) GetI() int64 {
	if m != nil {
		return m.I
	}
	return 0
}

func (m *Test2) GetJ() int64 {
	if m != nil {
		return m.J
	}
	return 0
}

func (m *Test2) GetK() int64 {
	if m != nil {
		return m.K
	}
	return 0
}

func (m *Test2) GetL() int64 {
	if m != nil {
		return m.L
	}
	return 0
}

func (m *Test2) GetM() int64 {
	if m != nil {
		return m.M
	}
	return 0
}

func (m *Test2) GetN() int64 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *Test2) GetO() int64 {
	if m != nil {
		return m.O
	}
	return 0
}

func (m *Test2) GetP() int64 {
	if m != nil {
		return m.P
	}
	return 0
}

func (m *Test2) GetQ() int64 {
	if m != nil {
		return m.Q
	}
	return 0
}

func (m *Test2) GetR() int64 {
	if m != nil {
		return m.R
	}
	return 0
}

func (m *Test2) GetS() int64 {
	if m != nil {
		return m.S
	}
	return 0
}

func (m *Test2) GetT() int64 {
	if m != nil {
		return m.T
	}
	return 0
}

func (m *Test2) GetU() int64 {
	if m != nil {
		return m.U
	}
	return 0
}

func (m *Test2) GetV() int64 {
	if m != nil {
		return m.V
	}
	return 0
}

func (m *Test2) GetW() int64 {
	if m != nil {
		return m.W
	}
	return 0
}

func (m *Test2) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Test2) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Test2) GetZ() int64 {
	if m != nil {
		return m.Z
	}
	return 0
}

func (m *Test2) GetA1() float32 {
	if m != nil {
		return m.A1
	}
	return 0
}

func (m *Test2) GetB1() float32 {
	if m != nil {
		return m.B1
	}
	return 0
}

func (m *Test2) GetC1() float32 {
	if m != nil {
		return m.C1
	}
	return 0
}

func (m *Test2) GetD1() float32 {
	if m != nil {
		return m.D1
	}
	return 0
}

func (m *Test2) GetE1() float32 {
	if m != nil {
		return m.E1
	}
	return 0
}

func (m *Test2) GetF1() float32 {
	if m != nil {
		return m.F1
	}
	return 0
}

func (m *Test2) GetG1() float32 {
	if m != nil {
		return m.G1
	}
	return 0
}

func (m *Test2) GetH1() float32 {
	if m != nil {
		return m.H1
	}
	return 0
}

func (m *Test2) GetI1() float32 {
	if m != nil {
		return m.I1
	}
	return 0
}

func (m *Test2) GetJ1() float32 {
	if m != nil {
		return m.J1
	}
	return 0
}

func (m *Test2) GetK1() float32 {
	if m != nil {
		return m.K1
	}
	return 0
}

func (m *Test2) GetL1() float32 {
	if m != nil {
		return m.L1
	}
	return 0
}

func (m *Test2) GetM1() float32 {
	if m != nil {
		return m.M1
	}
	return 0
}

func (m *Test2) GetN1() float32 {
	if m != nil {
		return m.N1
	}
	return 0
}

func (m *Test2) GetO1() float32 {
	if m != nil {
		return m.O1
	}
	return 0
}

func (m *Test2) GetP1() float32 {
	if m != nil {
		return m.P1
	}
	return 0
}

func (m *Test2) GetQ1() float32 {
	if m != nil {
		return m.Q1
	}
	return 0
}

func (m *Test2) GetR1() float32 {
	if m != nil {
		return m.R1
	}
	return 0
}

func (m *Test2) GetS1() float32 {
	if m != nil {
		return m.S1
	}
	return 0
}

func (m *Test2) GetT1() float32 {
	if m != nil {
		return m.T1
	}
	return 0
}

func (m *Test2) GetU1() float32 {
	if m != nil {
		return m.U1
	}
	return 0
}

func (m *Test2) GetV1() float32 {
	if m != nil {
		return m.V1
	}
	return 0
}

func (m *Test2) GetW1() float32 {
	if m != nil {
		return m.W1
	}
	return 0
}

func (m *Test2) GetX1() float32 {
	if m != nil {
		return m.X1
	}
	return 0
}

func (m *Test2) GetY1() float32 {
	if m != nil {
		return m.Y1
	}
	return 0
}

func (m *Test2) GetZ1() float32 {
	if m != nil {
		return m.Z1
	}
	return 0
}

func (m *Test2) GetA2() int32 {
	if m != nil {
		return m.A2
	}
	return 0
}

func (m *Test2) GetB2() int32 {
	if m != nil {
		return m.B2
	}
	return 0
}

func (m *Test2) GetC2() int32 {
	if m != nil {
		return m.C2
	}
	return 0
}

func (m *Test2) GetD2() int32 {
	if m != nil {
		return m.D2
	}
	return 0
}

func (m *Test2) GetE2() int32 {
	if m != nil {
		return m.E2
	}
	return 0
}

func (m *Test2) GetF2() int32 {
	if m != nil {
		return m.F2
	}
	return 0
}

func (m *Test2) GetG2() int32 {
	if m != nil {
		return m.G2
	}
	return 0
}

func (m *Test2) GetH2() int32 {
	if m != nil {
		return m.H2
	}
	return 0
}

func (m *Test2) GetI2() int32 {
	if m != nil {
		return m.I2
	}
	return 0
}

func (m *Test2) GetJ2() int32 {
	if m != nil {
		return m.J2
	}
	return 0
}

func (m *Test2) GetK2() int32 {
	if m != nil {
		return m.K2
	}
	return 0
}

func (m *Test2) GetL2() int32 {
	if m != nil {
		return m.L2
	}
	return 0
}

func (m *Test2) GetM2() int32 {
	if m != nil {
		return m.M2
	}
	return 0
}

func (m *Test2) GetN2() int32 {
	if m != nil {
		return m.N2
	}
	return 0
}

func (m *Test2) GetO2() int32 {
	if m != nil {
		return m.O2
	}
	return 0
}

func (m *Test2) GetP2() int32 {
	if m != nil {
		return m.P2
	}
	return 0
}

func (m *Test2) GetQ2() int32 {
	if m != nil {
		return m.Q2
	}
	return 0
}

func (m *Test2) GetR2() int32 {
	if m != nil {
		return m.R2
	}
	return 0
}

func (m *Test2) GetS2() int32 {
	if m != nil {
		return m.S2
	}
	return 0
}

func (m *Test2) GetT2() int32 {
	if m != nil {
		return m.T2
	}
	return 0
}

func (m *Test2) GetU2() int32 {
	if m != nil {
		return m.U2
	}
	return 0
}

func (m *Test2) GetV2() int32 {
	if m != nil {
		return m.V2
	}
	return 0
}

func (m *Test2) GetW2() int32 {
	if m != nil {
		return m.W2
	}
	return 0
}

func (m *Test2) GetX2() int32 {
	if m != nil {
		return m.X2
	}
	return 0
}

func (m *Test2) GetY2() int32 {
	if m != nil {
		return m.Y2
	}
	return 0
}

func (m *Test2) GetZ2() int32 {
	if m != nil {
		return m.Z2
	}
	return 0
}

func (m *Test2) GetA3() int32 {
	if m != nil {
		return m.A3
	}
	return 0
}

func init() {
	proto.RegisterType((*Test)(nil), "ngomc.Test")
	proto.RegisterType((*Test2)(nil), "ngomc.Test2")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 737 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0xd6, 0xc7, 0x6e, 0x53, 0x41,
	0x18, 0xc5, 0x71, 0x79, 0x6e, 0x26, 0x60, 0x13, 0x02, 0x98, 0x76, 0xe8, 0x26, 0x34, 0xd3, 0x02,
	0x33, 0xa6, 0xf7, 0xeb, 0xde, 0xcb, 0x75, 0xf7, 0x12, 0x14, 0xb1, 0x82, 0x20, 0xe2, 0x27, 0x84,
	0x17, 0x43, 0xf3, 0x9d, 0x6c, 0xfc, 0x49, 0x44, 0x11, 0x61, 0xf9, 0xd3, 0x99, 0xb9, 0x4a, 0x32,
	0xd2, 0x5f, 0xc9, 0x64, 0x96, 0x3b, 0x7b, 0xcb, 0xed, 0x1f, 0x3f, 0x77, 0x97, 0xbb, 0x59, 0xfb,
	0xfd, 0xeb, 0xee, 0xb7, 0x2f, 0x5b, 0xbf, 0xd2, 0x99, 0xb5, 0xd1, 0xce, 0xde, 0x32, 0xbb, 0x91,
	0x49, 0xc5, 0x48, 0xe5, 0x52, 0xf9, 0x28, 0x49, 0xc5, 0x41, 0x45, 0x98, 0x5c, 0x2a, 0x9f, 0x4e,
	0x52, 0xc5, 0xa0, 0x12, 0x22, 0x6e, 0xa5, 0xa0, 0x32, 0xd6, 0xb8, 0x95, 0x83, 0x2a, 0xb0, 0xdc,
	0x2a, 0x41, 0x55, 0xac, 0x53, 0xd5, 0xa0, 0x1a, 0x8e, 0xf1, 0x64, 0x2d, 0xa8, 0x8e, 0xe3, 0x54,
	0x3d, 0xa8, 0x81, 0x34, 0xd5, 0x08, 0x6a, 0x22, 0xc3, 0x7b, 0xcd, 0xa0, 0x16, 0x4e, 0x70, 0x6b,
	0x05, 0xb5, 0xb1, 0x41, 0xb5, 0x83, 0x3a, 0x38, 0x49, 0x75, 0x82, 0xba, 0xd8, 0xe4, 0xbd, 0x6e,
	0x50, 0x0f, 0xa7, 0xa8, 0x5e, 0x50, 0x1f, 0xa7, 0x79, 0xb2, 0x1f, 0x34, 0xc0, 0x19, 0x6a, 0x10,
	0x94, 0x20, 0xcb, 0x93, 0x49, 0xd0, 0x10, 0x67, 0xa9, 0x61, 0xd0, 0x08, 0xe7, 0x78, 0x72, 0x14,
	0x34, 0xc6, 0x79, 0x6a, 0x1c, 0x34, 0xc1, 0x05, 0x9e, 0x9c, 0x04, 0x4d, 0x71, 0x91, 0xdb, 0x34,
	0x68, 0x06, 0x70, 0x9b, 0x05, 0xcd, 0x71, 0x89, 0x9a, 0x07, 0x2d, 0x70, 0x99, 0x5a, 0x64, 0x37,
	0x33, 0x26, 0x76, 0xb8, 0x22, 0x34, 0xb1, 0x0b, 0x2e, 0x3a, 0x5c, 0xa5, 0x8b, 0xe2, 0x92, 0xc3,
	0x35, 0xba, 0x24, 0x2e, 0x3b, 0x5c, 0xcf, 0xa5, 0xf2, 0x26, 0x31, 0x65, 0x71, 0xc5, 0xe1, 0x06,
	0x5d, 0x11, 0x57, 0x1d, 0x72, 0x74, 0x55, 0x5c, 0x73, 0xb8, 0xc9, 0xfb, 0x35, 0x71, 0xdd, 0x61,
	0x8b, 0xae, 0x8b, 0x1b, 0x0e, 0xb7, 0x78, 0xbe, 0x21, 0x6e, 0x3a, 0xdc, 0xa6, 0x9b, 0xe2, 0x96,
	0xc3, 0x1d, 0xba, 0x25, 0x6e, 0x3b, 0xdc, 0xe5, 0xfd, 0xb6, 0xb8, 0xe3, 0x70, 0x8f, 0xee, 0x88,
	0xbb, 0x0e, 0x79, 0xba, 0x2b, 0xee, 0x39, 0xdc, 0x97, 0x3f, 0x8c, 0xe9, 0x89, 0xfb, 0x0e, 0x0f,
	0xb8, 0xf7, 0xc5, 0x03, 0x87, 0x87, 0xdc, 0x07, 0xe2, 0xc4, 0xe1, 0x11, 0x9d, 0x88, 0x87, 0x0e,
	0x8f, 0xe9, 0xa1, 0x78, 0xe4, 0xb0, 0x4d, 0x8f, 0xc4, 0x63, 0x87, 0x27, 0xf4, 0x58, 0x3c, 0x71,
	0x78, 0x4a, 0x4f, 0xc4, 0x53, 0x07, 0xc7, 0x9f, 0x7f, 0x2a, 0x9e, 0x39, 0x78, 0x7a, 0x26, 0x9e,
	0x3b, 0x14, 0xe8, 0xb9, 0x78, 0xe1, 0xf0, 0x8c, 0x5e, 0x88, 0x63, 0x8f, 0xe7, 0x74, 0xec, 0xe5,
	0x7d, 0x3c, 0x5e, 0xf0, 0xfb, 0x45, 0x71, 0xc9, 0xe3, 0x25, 0x5d, 0x12, 0x97, 0x3d, 0x5e, 0xd1,
	0x65, 0x71, 0xc5, 0xe3, 0x35, 0x5d, 0x11, 0x57, 0x3d, 0xde, 0xf0, 0xf7, 0xaf, 0x8a, 0x6b, 0x1e,
	0x6f, 0xb9, 0xd7, 0xc4, 0x75, 0x8f, 0x77, 0xfb, 0xef, 0x23, 0x6e, 0x78, 0xbc, 0xe7, 0xde, 0x10,
	0x37, 0x3d, 0x3e, 0x70, 0x6f, 0x8a, 0x5b, 0x1e, 0x1f, 0xb9, 0xb7, 0xc4, 0x6d, 0x8f, 0x4f, 0x74,
	0x5b, 0xdc, 0xf1, 0x88, 0xe9, 0x8e, 0xb8, 0xeb, 0x51, 0xa4, 0xbb, 0xe2, 0x9e, 0x47, 0x89, 0xdf,
	0xeb, 0x89, 0xfb, 0x1e, 0x65, 0xee, 0x7d, 0xf1, 0xc0, 0xa3, 0xc2, 0x7d, 0x20, 0x4e, 0x3c, 0xaa,
	0x74, 0x22, 0x1e, 0x7a, 0xd4, 0xe8, 0xa1, 0x78, 0xe4, 0x51, 0xdf, 0x7f, 0x1f, 0xf1, 0xd8, 0xa3,
	0xc1, 0x7d, 0x2c, 0x9e, 0x78, 0x34, 0xe9, 0x89, 0x78, 0xea, 0xd1, 0xe2, 0xf9, 0xa9, 0x78, 0xe6,
	0xd1, 0xe6, 0x3e, 0x13, 0xcf, 0x3d, 0x3a, 0xdc, 0xe7, 0xe2, 0x85, 0x47, 0x97, 0x5e, 0x88, 0xe3,
	0x02, 0x7a, 0x74, 0x5c, 0xd8, 0xfa, 0x9d, 0xce, 0xd8, 0x10, 0x31, 0xff, 0xb7, 0x8a, 0x45, 0x07,
	0x54, 0x2c, 0x3a, 0x74, 0xc5, 0xa2, 0x95, 0x8a, 0x45, 0x2b, 0x15, 0x8b, 0x0e, 0xa8, 0x58, 0xb4,
	0x52, 0xb1, 0x68, 0xa5, 0x62, 0xd1, 0xa1, 0x2b, 0x16, 0xad, 0x54, 0x2c, 0x3a, 0x74, 0xc5, 0xa2,
	0x95, 0x8a, 0x45, 0x07, 0x54, 0x2c, 0xfa, 0xd7, 0x8a, 0x19, 0x55, 0x31, 0xa3, 0x2a, 0x66, 0x8e,
	0x58, 0x31, 0xa3, 0x2a, 0x66, 0x8e, 0x58, 0x31, 0xa3, 0x2a, 0x66, 0x54, 0xc5, 0x8c, 0xaa, 0x98,
	0x51, 0x15, 0x33, 0xaa, 0x62, 0x46, 0x55, 0xcc, 0xa8, 0x8a, 0x19, 0x55, 0x31, 0xa3, 0x2a, 0x66,
	0x54, 0xc5, 0xcc, 0x7f, 0xae, 0x98, 0x55, 0x15, 0xb3, 0xaa, 0x62, 0x56, 0x55, 0xcc, 0xaa, 0x8a,
	0x59, 0x55, 0x31, 0xab, 0x2a, 0x66, 0x55, 0xc5, 0xac, 0xaa, 0x98, 0x55, 0x15, 0xb3, 0xaa, 0x62,
	0x56, 0x55, 0xcc, 0xaa, 0x8a, 0x59, 0x55, 0x31, 0xab, 0x2a, 0x66, 0x55, 0xc5, 0xac, 0xaa, 0x98,
	0x55, 0x15, 0xb3, 0xaa, 0x62, 0x56, 0x55, 0xcc, 0xaa, 0x8a, 0x59, 0x55, 0x31, 0xab, 0x2a, 0x66,
	0x55, 0xc5, 0xac, 0xaa, 0x98, 0x55, 0x15, 0xb3, 0xaa, 0x62, 0xe1, 0x7d, 0x0a, 0x9f, 0xd7, 0xe5,
	0x1f, 0xb3, 0xc2, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8c, 0xc6, 0x16, 0x49, 0xa6, 0x09, 0x00,
	0x00,
}
